{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","App.module.css","components/SearchContact/SearchContact.module.css","api/api.js","redux/operations.js","redux/slices/contacts.js","redux/slices/filter.js","redux/store.js","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/SearchContact/SearchContact.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["module","exports","fetcContacts","a","axios","get","response","data","postContacts","newContact","post","deleteContacts","delete","defaults","baseURL","createAsyncThunk","api","contactsFromDB","id","contactsSlice","createSlice","name","initialState","entities","status","error","extraReducers","operations","fulfilled","state","action","payload","pending","rejected","filter","item","filterSlice","reducers","_","actions","rootReducer","store","configureStore","reducer","devTools","process","getContacts","filteredSelector","createSelector","contacts","filterValue","contact","toLocaleLowerCase","includes","ContactForm","dispatch","useDispatch","allContacts","useSelector","numberInputId","uuidv4","nameInputId","onSubmit","evt","preventDefault","some","target","elements","inputName","value","alert","number","inputNumber","reset","className","s","form","formItem","autoComplete","type","pattern","title","required","btn","SearchContact","onChange","currentTarget","ContactList","useEffect","filteredContactList","contactList","map","user","contactitem","onClick","App","container","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1166455f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2xCpB\",\"formItem\":\"ContactForm_formItem__2moh8\",\"btn\":\"ContactForm_btn__11teI\",\"number\":\"ContactForm_number__ms2mx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__T8RO8\",\"btn\":\"ContactList_btn__ik07x\",\"contactitem\":\"ContactList_contactitem__N3BJm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2t4Nl\",\"title\":\"App_title__2zBqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"SearchContact_title__1InK8\"};","import axios from \"axios\";\n\naxios.defaults.baseURL = \"http://localhost:3001\";\n\nexport async function fetcContacts() {\n  const response = await axios.get(\"/contacts\");\n  return response.data;\n}\n\nexport async function postContacts(newContact) {\n  const response = await axios.post(\"/contacts\", newContact);\n  return response.data;\n}\n\nexport async function deleteContacts(deleteContacts) {\n  const response = await axios.delete(`/contacts/${deleteContacts}`);\n  return response.data;\n}\n","import * as api from \"../api/api\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetcContacts = createAsyncThunk(\n  \"contacts/fetcContacts\",\n  async () => {\n    try {\n      const contactsFromDB = await api.fetcContacts();\n      return contactsFromDB;\n    } catch (error) {\n      return error;\n    }\n  }\n);\n\nexport const postContacts = createAsyncThunk(\n  \"contacts/postContacts\",\n  async (newContact) => {\n    try {\n      const contactsFromDB = await api.postContacts(newContact);\n      return contactsFromDB;\n    } catch (error) {\n      return error;\n    }\n  }\n);\n\nexport const deleteContacts = createAsyncThunk(\n  \"contacts/deleteContacts\",\n  async (id) => {\n    try {\n      await api.deleteContacts(id);\n      return id;\n    } catch (error) {\n      return error;\n    }\n  }\n);\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport * as operations from \"../operations\";\n\nconst contactsSlice = createSlice({\n  name: \"contacts\",\n  initialState: {\n    entities: [],\n    status: null,\n    error: null,\n  },\n  extraReducers: {\n    [operations.fetcContacts.fulfilled](state, action) {\n      return {\n        ...state,\n        entities: [...state.entities, ...action.payload],\n        status: null,\n        error: null,\n      };\n    },\n    [operations.fetcContacts.pending](state, action) {\n      return {\n        ...state,\n        status: \"Loading\",\n        error: null,\n      };\n    },\n    [operations.fetcContacts.rejected](state, action) {\n      return {\n        ...state,\n        status: null,\n        error: \"Error\",\n      };\n    },\n    [operations.postContacts.fulfilled](state, action) {\n      return {\n        ...state,\n        entities: [...state.entities, action.payload],\n        status: null,\n        error: null,\n      };\n    },\n    [operations.postContacts.pending](state, action) {\n      return {\n        ...state,\n        status: \"Loading\",\n      };\n    },\n    [operations.postContacts.rejected](state, action) {\n      return {\n        ...state,\n        status: null,\n        error: \"Error\",\n      };\n    },\n    [operations.deleteContacts.fulfilled](state, action) {\n      return {\n        ...state,\n        entities: state.entities.filter((item) => item.id !== action.payload),\n        status: null,\n        error: null,\n      };\n    },\n    [operations.deleteContacts.pending](state, action) {\n      return {\n        ...state,\n        status: \"Loading\",\n        error: null,\n      };\n    },\n    [operations.deleteContacts.rejected](state, action) {\n      return {\n        ...state,\n        status: null,\n        error: \"Error\",\n      };\n    },\n  },\n});\n\nexport default contactsSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst filterSlice = createSlice({\n  name: \"filter\",\n  initialState: \"\",\n  reducers: {\n    filter: (_, { payload }) => payload,\n  },\n});\n\nexport const { filter } = filterSlice.actions;\n\nexport default filterSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsSlice from \"./slices/contacts\";\r\nimport filterSlice from \"./slices/filter\";\r\n\r\nconst rootReducer = {\r\n  contactsSlice,\r\n  filterSlice,\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n});\r\n\r\nexport default store;\r\n","import { createSelector } from \"reselect\";\n\nexport const getContacts = (state) => {\n  return state.contactsSlice.entities;\n};\nexport const getFilter = (state) => state.filterSlice;\n\nexport const filteredSelector = createSelector(\n  [getContacts, getFilter],\n  (contacts, filterValue) =>\n    contacts.filter((contact) => {\n      return contact.name.toLocaleLowerCase().includes(filterValue);\n    })\n);\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport * as operations from \"../../redux/operations\";\r\nimport { getContacts } from \"../../redux/selectors\";\r\n\r\nexport default function ContactForm() {\r\n  const dispatch = useDispatch();\r\n  const allContacts = useSelector(getContacts);\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (\r\n      allContacts.some(\r\n        (contact) => contact.name === evt.target.elements.inputName.value\r\n      )\r\n    ) {\r\n      alert(`${evt.target.elements.inputName.value} is already in contacts`);\r\n    } else {\r\n      dispatch(\r\n        operations.postContacts({\r\n          name: evt.target.elements.inputName.value,\r\n          number: evt.target.elements.inputNumber.value,\r\n        })\r\n      );\r\n    }\r\n    evt.target.reset();\r\n  };\r\n\r\n  const numberInputId = uuidv4();\r\n  const nameInputId = uuidv4();\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <span>Name</span>\r\n      <label className={s.formItem}>\r\n        <input\r\n          autoComplete=\"off\"\r\n          type=\"text\"\r\n          name=\"inputName\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          id={nameInputId}\r\n        />\r\n      </label>\r\n      <span className={s.number}>Number</span>\r\n      <label className={s.formItem}>\r\n        <input\r\n          autoComplete=\"off\"\r\n          type=\"tel\"\r\n          name=\"inputNumber\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          id={numberInputId}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.btn}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport s from \"./SearchContact.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { filter } from \"../../redux/slices/filter\";\r\n\r\nexport default function SearchContact() {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div>\r\n      <p className={s.title}>Find contacts by name</p>\r\n      <label>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(evt) =>\r\n            dispatch(filter(evt.currentTarget.value.toLocaleLowerCase()))\r\n          }\r\n        ></input>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport s from \"./ContactList.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { filteredSelector } from \"../../redux/selectors\";\r\nimport * as operations from \"../../redux/operations\";\r\n\r\nexport default function ContactList() {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => dispatch(operations.fetcContacts()), [dispatch]);\r\n  const filteredContactList = useSelector(filteredSelector);\r\n\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {filteredContactList.map((user) => (\r\n        <li key={user.id} className={s.contactitem}>\r\n          <span>\r\n            {user.name} {user.number}\r\n          </span>\r\n          <button\r\n            type=\"button\"\r\n            className={s.btn}\r\n            onClick={() => dispatch(operations.deleteContacts(user.id))}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import ContactForm from \"./components/ContactForm/ContactForm\";\nimport SearchContact from \"./components/SearchContact/SearchContact\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport s from \"./App.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { getContacts } from \"./redux/selectors\";\n\nexport default function App() {\n  const allContacts = useSelector(getContacts);\n  return (\n    <div className={s.container}>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm />\n      {allContacts.length > 0 && <h2 className={s.title}>Contacts</h2>}\n      {allContacts.length > 0 && <SearchContact />}\n      <ContactList />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}